"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[611],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return m}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return t?n.createElement(f,i(i({ref:r},c),{},{components:t})):n.createElement(f,i({ref:r},c))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7277:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var n=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],s={title:"Parte 6 (2 horas)",sidebar_position:9},l="parte 6: Parser de lisp con Bison.",p={unversionedId:"labs/Laboratorio 2/parte6",id:"version-2021_2/labs/Laboratorio 2/parte6",isDocsHomePage:!1,title:"Parte 6 (2 horas)",description:"Consigna",source:"@site/versioned_docs/version-2021_2/labs/Laboratorio 2/parte6.md",sourceDirName:"labs/Laboratorio 2",slug:"/labs/Laboratorio 2/parte6",permalink:"/docs/2021_2/labs/Laboratorio 2/parte6",editUrl:"https://github.com/compiladores/compiladores.github.io/edit/master/docs/versioned_docs/version-2021_2/labs/Laboratorio 2/parte6.md",tags:[],version:"2021_2",sidebarPosition:9,frontMatter:{title:"Parte 6 (2 horas)",sidebar_position:9},sidebar:"version-2021_2/tutorialSidebar",previous:{title:"Parte 5 (1 horas)",permalink:"/docs/2021_2/labs/Laboratorio 2/parte5"},next:{title:"Laboratorio 3",permalink:"/docs/2021_2/labs/Laboratorio 3"}},c=[{value:"Consigna",id:"consigna",children:[]},{value:"Consejos",id:"consejos",children:[]}],u={toc:c};function d(e){var r=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"parte-6-parser-de-lisp-con-bison"},"parte 6: Parser de lisp con Bison."),(0,a.kt)("h2",{id:"consigna"},"Consigna"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Modificar  ",(0,a.kt)("inlineCode",{parentName:"strong"},"Compilisp.y")," de forma que pasen los tests de ",(0,a.kt)("inlineCode",{parentName:"strong"},"test/.../parte6/CompilispTest.java"),"."),". Se pueden crear nuevos archivos pero ",(0,a.kt)("strong",{parentName:"p"},"NO")," modificar el archivo de tests. En caso de requerir agregar m\xe1s tests, hacerlo en un archivo aparte. ",(0,a.kt)("strong",{parentName:"p"},"Mantener los mismos tokens del ",(0,a.kt)("inlineCode",{parentName:"strong"},"Compilisp.y")," base.")),(0,a.kt)("h2",{id:"consejos"},"Consejos"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Puede venir bien usar ",(0,a.kt)("inlineCode",{parentName:"li"},"%define api.parser.extends {superclass}")," para definir los m\xe9todos que requieran m\xe1s l\xf3gica en una clase distinta. Usar superclases requiere algunas declaraciones m\xe1s, incluidas en el archivo ",(0,a.kt)("inlineCode",{parentName:"li"},"Compilisp.y")," provisto"),(0,a.kt)("li",{parentName:"ul"},"El resto de los par\xe1metros ajustables para java se puede encontrar ",(0,a.kt)("a",{parentName:"li",href:"https://www.gnu.org/software/bison/manual/html_node/Java-Declarations-Summary.html"},"aqu\xed")),(0,a.kt)("li",{parentName:"ul"},"Los tests son los mismos que para la parte 4, con lo cual no es necesario implementar m\xe1s comportamiento, s\xf3lo adaptar el de esa parte.")))}d.isMDXComponent=!0}}]);