"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5503],{3905:function(e,a,t){t.d(a,{Zo:function(){return l},kt:function(){return u}});var r=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function m(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=r.createContext({}),p=function(e){var a=r.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},l=function(e){var a=p(e.components);return r.createElement(i.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},d=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,l=m(e,["components","mdxType","originalType","parentName"]),d=p(t),u=n,N=d["".concat(i,".").concat(u)]||d[u]||c[u]||s;return t?r.createElement(N,o(o({ref:a},l),{},{components:t})):r.createElement(N,o({ref:a},l))}));function u(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var s=t.length,o=new Array(s);o[0]=d;var m={};for(var i in a)hasOwnProperty.call(a,i)&&(m[i]=a[i]);m.originalType=e,m.mdxType="string"==typeof e?e:n,o[1]=m;for(var p=2;p<s;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7167:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return m},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var r=t(7462),n=t(3366),s=(t(7294),t(3905)),o=["components"],m={title:"Parte 3 (1 hora)",sidebar_position:5},i="parte 3: parseo general",p={unversionedId:"labs/Laboratorio 2/parte3",id:"version-2021_2/labs/Laboratorio 2/parte3",isDocsHomePage:!1,title:"Parte 3 (1 hora)",description:"En esta secci\xf3n del trabajo pr\xe1ctico se construye la parte del parser que determina qu\xe9 acci\xf3n llevar a cabo sobre la LL1Machine a partir de la menor cantidad de informaci\xf3n posible. El algoritmo de decisi\xf3n se aisl\xf3 de forma que haya que escribirlo en el m\xe9todo parse de AutomaticParser.java. La caracter\xedstica definitoria de los parsers LL(1) es justamente que pueden trabajar a partir de esta poqu\xedsima informaci\xf3n.",source:"@site/versioned_docs/version-2021_2/labs/Laboratorio 2/parte3.md",sourceDirName:"labs/Laboratorio 2",slug:"/labs/Laboratorio 2/parte3",permalink:"/teo/docs/2021_2/labs/Laboratorio 2/parte3",editUrl:"https://github.com/compiladores/compiladores.github.io/edit/master/docs/versioned_docs/version-2021_2/labs/Laboratorio 2/parte3.md",tags:[],version:"2021_2",sidebarPosition:5,frontMatter:{title:"Parte 3 (1 hora)",sidebar_position:5},sidebar:"version-2021_2/tutorialSidebar",previous:{title:"Parte 2 (1 horas)",permalink:"/teo/docs/2021_2/labs/Laboratorio 2/parte2"},next:{title:"Gram\xe1tica de compilisp",permalink:"/teo/docs/2021_2/labs/Laboratorio 2/gramatica_compilisp"}},l=[{value:"Consigna",id:"consigna",children:[]},{value:"Consejos",id:"consejos",children:[]}],c={toc:l};function d(e){var a=e.components,t=(0,n.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"parte-3-parseo-general"},"parte 3: parseo general"),(0,s.kt)("p",null,"En esta secci\xf3n del trabajo pr\xe1ctico se construye la parte del parser que determina qu\xe9 acci\xf3n llevar a cabo sobre la ",(0,s.kt)("inlineCode",{parentName:"p"},"LL1Machine")," a partir de la menor cantidad de informaci\xf3n posible. El algoritmo de decisi\xf3n se aisl\xf3 de forma que haya que escribirlo en el m\xe9todo ",(0,s.kt)("inlineCode",{parentName:"p"},"parse")," de ",(0,s.kt)("inlineCode",{parentName:"p"},"AutomaticParser.java"),". La caracter\xedstica definitoria de los parsers LL(1) es justamente que pueden trabajar a partir de esta poqu\xedsima informaci\xf3n."),(0,s.kt)("p",null,"El m\xe9todo ",(0,s.kt)("inlineCode",{parentName:"p"},"parse")," incluye la parte del algoritmo donde se accede la tabla de an\xe1lisis sint\xe1ctico. Formalmente, esto requerir\xeda la construcci\xf3n de los conjuntos ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"P"),(0,s.kt)("mi",{parentName:"mrow"},"r"),(0,s.kt)("mi",{parentName:"mrow"},"i"),(0,s.kt)("mi",{parentName:"mrow"},"m"),(0,s.kt)("mi",{parentName:"mrow"},"e"),(0,s.kt)("mi",{parentName:"mrow"},"r"),(0,s.kt)("mi",{parentName:"mrow"},"o"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mi",{parentName:"mrow"},"A"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"Primero(A)")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"P"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"m"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,s.kt)("span",{parentName:"span",className:"mclose"},")")))))," y ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"S"),(0,s.kt)("mi",{parentName:"mrow"},"i"),(0,s.kt)("mi",{parentName:"mrow"},"g"),(0,s.kt)("mi",{parentName:"mrow"},"u"),(0,s.kt)("mi",{parentName:"mrow"},"i"),(0,s.kt)("mi",{parentName:"mrow"},"e"),(0,s.kt)("mi",{parentName:"mrow"},"n"),(0,s.kt)("mi",{parentName:"mrow"},"t"),(0,s.kt)("mi",{parentName:"mrow"},"e"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mi",{parentName:"mrow"},"A"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"Siguiente(A)")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"u"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,s.kt)("span",{parentName:"span",className:"mclose"},")"))))),", tal como descripto en la te\xf3rica. En este caso no es necesario calcular la tabla explicitamente sino que se puede dise\xf1ar informalmente."),(0,s.kt)("h2",{id:"consigna"},"Consigna"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Completar el m\xe9todos de ",(0,s.kt)("inlineCode",{parentName:"strong"},"AutomaticParser.java")," de forma que pasen los tests de ",(0,s.kt)("inlineCode",{parentName:"strong"},"test/.../parte3/AutomaticParserTest.java"),"."),"."),(0,s.kt)("h2",{id:"consejos"},"Consejos"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("inlineCode",{parentName:"li"},"LL1Machine")," detecta casos en los cuales ",(0,s.kt)("inlineCode",{parentName:"li"},"parse()")," no llama ning\xfan m\xe9todo, o realiza m\xe1s de una invocaci\xf3n. Evitar estos casos."),(0,s.kt)("li",{parentName:"ol"},"Aprovechar los casos ",(0,s.kt)("inlineCode",{parentName:"li"},"default")," de las estructuras ",(0,s.kt)("inlineCode",{parentName:"li"},"switch"),", bloques ",(0,s.kt)("inlineCode",{parentName:"li"},"else"),", etc. No es necesario especificar la tabla con excesiva precisi\xf3n.")))}d.isMDXComponent=!0}}]);