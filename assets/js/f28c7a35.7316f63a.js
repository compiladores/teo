"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1027],{3905:function(e,a,n){n.d(a,{Zo:function(){return c},kt:function(){return p}});var r=n(7294);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function t(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?t(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,r,o=function(e,a){if(null==e)return{};var n,r,o={},t=Object.keys(e);for(r=0;r<t.length;r++)n=t[r],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(r=0;r<t.length;r++)n=t[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var a=r.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},c=function(e){var a=u(e.components);return r.createElement(s.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var n=e.components,o=e.mdxType,t=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),p=o,g=m["".concat(s,".").concat(p)]||m[p]||d[p]||t;return n?r.createElement(g,i(i({ref:a},c),{},{components:n})):r.createElement(g,i({ref:a},c))}));function p(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var t=n.length,i=new Array(t);i[0]=m;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<t;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4073:function(e,a,n){n.r(a),n.d(a,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return m}});var r=n(7462),o=n(3366),t=(n(7294),n(3905)),i=["components"],l={title:"Compiladores",sidebar_position:1},s="Introducci\xf3n",u={unversionedId:"teoricas/intro",id:"teoricas/intro",isDocsHomePage:!1,title:"Compiladores",description:"Conocimientos Previos",source:"@site/docs/teoricas/01-intro.md",sourceDirName:"teoricas",slug:"/teoricas/intro",permalink:"/docs/teoricas/intro",editUrl:"https://github.com/compiladores/compiladores.github.io/edit/master/docs/docs/teoricas/01-intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Compiladores",sidebar_position:1},sidebar:"teoricaSidebar",next:{title:"Procesadores de Lenguaje",permalink:"/docs/teoricas/proc-lenguaje"}},c=[{value:"Conocimientos Previos",id:"conocimientos-previos",children:[]},{value:"En Primer Lugar",id:"en-primer-lugar",children:[]},{value:"En Segundo Lugar",id:"en-segundo-lugar",children:[]},{value:"En Tercer Lugar",id:"en-tercer-lugar",children:[]},{value:"En Cuarto Lugar",id:"en-cuarto-lugar",children:[{value:"Uno se Convierte en un Mejor Programador:",id:"uno-se-convierte-en-un-mejor-programador",children:[]},{value:"Uno Puede Crear Herramientas:",id:"uno-puede-crear-herramientas",children:[]},{value:"Crear Nuevos Lenguajes de Programaci\xf3n:",id:"crear-nuevos-lenguajes-de-programaci\xf3n",children:[]},{value:"Contribuir con los Compiladores Existentes:",id:"contribuir-con-los-compiladores-existentes",children:[]}]},{value:"Un Poco de Historia",id:"un-poco-de-historia",children:[]},{value:"La d\xe9cada de los 30",id:"la-d\xe9cada-de-los-30",children:[{value:"Kurt Godel",id:"kurt-godel",children:[]},{value:"Alan Turing",id:"alan-turing",children:[]},{value:"Alonzo Church",id:"alonzo-church",children:[]},{value:"La d\xe9cada de los 40",id:"la-d\xe9cada-de-los-40",children:[]}]},{value:"El Aporte de Noam Chomsky",id:"el-aporte-de-noam-chomsky",children:[]},{value:"La Jerarqu\xeda de Chomsky",id:"la-jerarqu\xeda-de-chomsky",children:[]}],d={toc:c};function m(e){var a=e.components,l=(0,o.Z)(e,i);return(0,t.kt)("wrapper",(0,r.Z)({},d,l,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"introducci\xf3n"},"Introducci\xf3n"),(0,t.kt)("h2",{id:"conocimientos-previos"},"Conocimientos Previos"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Algoritmos y Programaci\xf3n II"),(0,t.kt)("li",{parentName:"ul"},"Estructura del Computador"),(0,t.kt)("li",{parentName:"ul"},"Teor\xeda de Algoritmos I (deseable)")),(0,t.kt)("h1",{id:"por-qu\xe9-estudiar-compiladores"},"\xbfPor Qu\xe9 Estudiar Compiladores?"),(0,t.kt)("h2",{id:"en-primer-lugar"},"En Primer Lugar"),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"Un compilador es una fina pieza de ingenier\xeda, en el cual cada engranaje debe funcionar con precisi\xf3n superlativa. Cada uno de estos engranajes se sustenta sobre una inmensa base te\xf3rica. ","\u2014","Mariano M\xe9ndez ")),(0,t.kt)("h2",{id:"en-segundo-lugar"},"En Segundo Lugar"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Un  compilador ",(0,t.kt)("del",null,"es")," era un programa complejo y de Gran tama\xf1o.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"En la actualidad es un conjunto de  programas y bibliotecas que incluyen cientos de miles de l\xedneas de c\xf3digo, incluso a veces millones de l\xedneas. Est\xe1n organizados en sub-sistemas que interact\xfaan entre s\xed.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Un buen compilador contiene un microcosmos de las ciencias de la computaci\xf3n, utiliza:"),(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},"Algoritmos Greedy              ","\u2014",">  Aplicaci\xf3n de registros"),(0,t.kt)("li",{parentName:"ul"},"Programaci\xf3n Din\xe1mica     ","\u2014","> Selecci\xf3n de instrucciones"),(0,t.kt)("li",{parentName:"ul"},"Aut\xf3matas Finitos               ","\u2014","> Lexical An\xe1lisis"),(0,t.kt)("li",{parentName:"ul"},"Push Down aut\xf3matas       ","\u2014",">  Parsing"),(0,t.kt)("li",{parentName:"ul"},"Alocaci\xf3n din\xe1mica"),(0,t.kt)("li",{parentName:"ul"},"Sincronizaci\xf3n"),(0,t.kt)("li",{parentName:"ul"},"Localidad"),(0,t.kt)("li",{parentName:"ul"},"Gesti\xf3n de Jerarqu\xedas da Memoria")))),(0,t.kt)("p",null,"Entre otras much\xedsimas cosas."),(0,t.kt)("h2",{id:"en-tercer-lugar"},"En Tercer Lugar"),(0,t.kt)("p",null,"Adem\xe1s escribir un compilador simple es desde el punto de vista educativo un excelente proyecto, ya que mejora muchas habilidades para:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},"la comprensi\xf3n de los lenguajes de programaci\xf3n")),(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},"su dise\xf1o,")),(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},"estructura de datos")),(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},"dise\xf1o de algoritmos")),(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},"y una amplia gama de t\xe9cnicas de programaci\xf3n."))),(0,t.kt)("p",null,"Comprender c\xf3mo un lenguaje de alto nivel es traducido, de forma tal que puede ser ejecutado por el hardware ",(0,t.kt)("strong",{parentName:"p"},"da")," una espectacular idea de c\xf3mo el programa se comportar\xe1 cuando este est\xe9 corriendo,  de donde estar\xe1 el cuello de botella en la ejecuci\xf3n de las instrucciones individuales de alto nivel."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Estudiar c\xf3mo se construyen los compiladores colaborar\xe1 en convertir a uno mismo en un mejor programador.")),(0,t.kt)("h2",{id:"en-cuarto-lugar"},"En Cuarto Lugar"),(0,t.kt)("h3",{id:"uno-se-convierte-en-un-mejor-programador"},"Uno se Convierte en un Mejor Programador:"),(0,t.kt)("p",null,"Un ",(0,t.kt)("strong",{parentName:"p"},"craftman")," tiene que comprender sus herramientas, y un programador no esta exento de esto. Mediante una mejor comprensi\xf3n de como un compilador traduce un programa en c\xf3digo m\xe1quina uno se adquiere m\xe1s habilidades en la escritura de c\xf3digo efectivo y sabe como debuguearlo cuando este falla."),(0,t.kt)("h3",{id:"uno-puede-crear-herramientas"},"Uno Puede Crear Herramientas:"),(0,t.kt)("p",null,"Si uno es capaz de crear un Parser para un lenguaje dado, esto le permite crear herramientas que proporcionan una mejor comprensi\xf3n y an\xe1lisis del c\xf3digo fuente de un programa. Adem\xe1s se podr\xe1 escribir herramientas como los IDE (Integrated Development Tools) que permiten ampliar las capacidades de un simple editor de texto agregando resaltado de sintaxis, refactorizaciones, m\xe9tricas sobre el c\xf3digo escrito, entre otras muchas cosas."),(0,t.kt)("h3",{id:"crear-nuevos-lenguajes-de-programaci\xf3n"},"Crear Nuevos Lenguajes de Programaci\xf3n:"),(0,t.kt)("p",null,"Incre\xedblemente es posible obtener soluciones a problemas complejos, compactando estos en un determinado lenguaje ad-Hoc, este tipo de lenguaje se denomina ",(0,t.kt)("strong",{parentName:"p"},"Domain Specific Languages")," "),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"El caso de DOT, lenguaje para describir grafos")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"    digraph graphname {   \n       yellow -> orange -> red;  \n       orange -> green; \n    }\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"img",src:n(6359).Z})),(0,t.kt)("h3",{id:"contribuir-con-los-compiladores-existentes"},"Contribuir con los Compiladores Existentes:"),(0,t.kt)("p",null,"Es poco probable que uno escriba el pr\xf3ximo mejor compilador de C o Rust, pero estos desarrollos se encuentran en continuo cambio y actualizaci\xf3n (GCC, Rust, Elixir,Python, por nombrar algunos). "),(0,t.kt)("p",null,"Todos ellos son un microcosmos en continuo cambio que necesitan:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"el agregado de nuevas caracter\xedsticas del lenguaje,")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"portarlos a nuevas arquitecturas,")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"mejorar las optimizaciones que se hacen a los programas"))),(0,t.kt)("p",null,"Todas estas razones necesitan que los compiladores sean continuamente mejorados."),(0,t.kt)("h2",{id:"un-poco-de-historia"},"Un Poco de Historia"),(0,t.kt)("h2",{id:"la-d\xe9cada-de-los-30"},"La d\xe9cada de los 30"),(0,t.kt)("p",null,"El origen de los modelos abstractos de la computaci\xf3n nacen justamente en esta d\xe9cada. Existen tres ",(0,t.kt)("strong",{parentName:"p"},"modelos computables")," equivalentes que fueron propuestos en el mismo a\xf1o, 1937. "),(0,t.kt)("h3",{id:"kurt-godel"},"Kurt Godel"),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"img",src:n(731).Z}),"\nMatem\xe1tico Austriaco    "),(0,t.kt)("h4",{id:"teorema-de-incompletitud"},"Teorema de Incompletitud"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"A principios de siglo se sosten\xeda que la l\xf3gica era un s\xf3lido soporte para las verdades matem\xe1ticas (Bertran Rsusell, ",(0,t.kt)("em",{parentName:"p"},"Principia mathematica"),"). "),(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},"Proposiciones Verdaderas ",(0,t.kt)("inlineCode",{parentName:"li"},"A=[ 2+3 =5 ]")),(0,t.kt)("li",{parentName:"ul"},"Proposiciones Falsas ",(0,t.kt)("inlineCode",{parentName:"li"},"B= [ 2*3 = ]")),(0,t.kt)("li",{parentName:"ul"},"Proposiciones Indecibles "))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Tom\xf3 una proposici\xf3n ",(0,t.kt)("em",{parentName:"p"},"solo s\xe9 que no s\xe9 nada")," y demostr\xf3 que no pod\xeda probarse que fuera cierta (porque sino habr\xeda una contradicci\xf3n), pero tampoco que fuera falsa, por la misma raz\xf3n. ")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Godel logr\xf3 demostrar que dentro de cualquier sistema matem\xe1tico estrictamente l\xf3gico, siempre habr\xeda proposiciones cuya veracidad o falsedad no podr\xeda ser demostrada, partiendo de los axiomas en los que se basara ese sistema.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Caracteriza a los sistemas incompletos como aquellos en los que no se puede evaluar si sus proposiciones son verdaderas o falsas."))),(0,t.kt)("h4",{id:"funciones-recursivas-parciales"},"Funciones Recursivas Parciales"),(0,t.kt)("h4",{id:"teor\xeda-de-las-funciones-recursivas-generales"},"Teor\xeda de las Funciones Recursivas Generales"),(0,t.kt)("h3",{id:"alan-turing"},"Alan Turing"),(0,t.kt)("p",null," ",(0,t.kt)("img",{alt:"img",src:n(8596).Z})),(0,t.kt)("p",null,"Matem\xe1tico Ingl\xe9s"),(0,t.kt)("h4",{id:"m\xe1quina-de-turing-"},"M\xe1quina de Turing ."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"En esa misma \xe9poca se pretend\xeda averiguar si era posible o no construir alg\xfan ingenio mec\xe1nico, con el que se pudiera averiguar o demostrar en un modo autom\xe1tico, la veracidad o falsedad de alguna demostraci\xf3n de \xedndole matem\xe1tico.")),(0,t.kt)("img",{src:"./images/turing-machine.png",width:"500"}),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Maquina-a y maquina-u (",(0,t.kt)("a",{parentName:"p",href:"https://turingmachine.io/"},"https://turingmachine.io/"),")")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"En la actualidad no hay ning\xfan algoritmo que permita determinar las propiedades de los n\xfamero naturales"))),(0,t.kt)("h4",{id:"problema-de-la-parada"},"Problema de la Parada"),(0,t.kt)("p",null,"El problema de la parada o problema de la detenci\xf3n para m\xe1quinas de Turing consiste en lo siguiente: dada una M\xe1quina de Turing  M y una palabra w, determinar si M  terminar\xe1 en un n\xfamero finito de pasos cuando es ejecutada usando w como dato de entrada. Alan Turing, en su famoso art\xedculo ",(0,t.kt)("strong",{parentName:"p"},"On Computable Numbers, with an Application to the Entscheidungsproblem")," (1936), demostr\xf3 que el problema de la parada de la M\xe1quina de Turing es indecible (no computable o no recursivo), en el sentido de que ninguna m\xe1quina de Turing lo puede resolver. "),(0,t.kt)("h3",{id:"alonzo-church"},"Alonzo Church"),(0,t.kt)("p",null," ",(0,t.kt)("img",{alt:"img",src:n(7129).Z})),(0,t.kt)("h4",{id:"c\xe1lculo-lambda--"},"C\xe1lculo Lambda  ()"),(0,t.kt)("p",null,'El c\xe1lculo lambda es un sistema formal dise\xf1ado para investigar la definici\xf3n de funci\xf3n, la noci\xf3n de aplicaci\xf3n de funciones y la recursi\xf3n.  Church us\xf3 el c\xe1lculo lambda en 1936 para resolver el Entscheidungsproblem. Puede ser usado para definir de manera limpia y precisa qu\xe9 es una "funci\xf3n computable". '),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"La funci\xf3n identidad I(x) = x, que toma un \xfanico argumento, x, e inmediatamente devuelve x. ")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Por otro lado, la funci\xf3n suma S(x,y) = x + y, que toma dos argumentos, x e y, y devuelve la suma de ambos: x + y. ")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Las funciones no necesitan ser expl\xedcitamente nombradas. Esto es, la funci\xf3n S(x,y) = x + y puede ser reescrita como una funci\xf3n an\xf3nima: x,y \u2192 x + y (que se lee: \xabel par de x e y se mapea a x + y\xbb). ")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Del mismo modo, I(x) = x puede ser reescrita de forma an\xf3nima como x \u2192 x, que se lee: \xabel argumento x se mapea a s\xed mismo\xbb.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"El nombre que se asigne a los argumentos de la funci\xf3n es generalmente irrelevante. Esto es, x \u2192 x e y \u2192 y expresan la misma funci\xf3n: la funci\xf3n identidad. Del mismo modo, x,y \u2192 x + y y u,v \u2192 u + v expresan la misma funci\xf3n: la funci\xf3n suma.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Toda funci\xf3n que requiere dos argumentos, como por ejemplo la funci\xf3n suma, puede ser reescrita como una funci\xf3n que acepta un \xfanico argumento, pero que devuelve otra funci\xf3n, la cual a su vez acepta un \xfanico argumento. "),(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Por ejemplo, x,y \u2192 x + y puede ser reescrita como x \u2192 (y \u2192 x + y). Esta transformaci\xf3n se conoce como currificaci\xf3n, y puede generalizarse para funciones que aceptan cualquier n\xfamero de argumentos. Esto puede parecer dif\xedcil de entender, pero se entiende mejor mediante un ejemplo. Consid\xe9rese la funci\xf3n suma no currificada:"),(0,t.kt)("p",{parentName:"li"},"x,y \u2192 x + y"),(0,t.kt)("p",{parentName:"li"},"Al tomar a los n\xfameros 2 y 3 como argumentos, se obtiene:"),(0,t.kt)("pre",{parentName:"li"},(0,t.kt)("code",{parentName:"pre"},"2 + 3\n")),(0,t.kt)("p",{parentName:"li"},"Lo cual es igual a 5. Consid\xe9rese ahora la versi\xf3n currificada de la funci\xf3n:"),(0,t.kt)("pre",{parentName:"li"},(0,t.kt)("code",{parentName:"pre"},"x \u2192 (y \u2192 x + y)\n")),(0,t.kt)("p",{parentName:"li"},"Si se toma al n\xfamero 2 como argumento, se obtiene la funci\xf3n:"),(0,t.kt)("pre",{parentName:"li"},(0,t.kt)("code",{parentName:"pre"},"y \u2192 2 + y\n")),(0,t.kt)("p",{parentName:"li"},"Y tomando luego al n\xfamero 3 como argumento, se obtiene:"),(0,t.kt)("p",{parentName:"li"},"2 + 3"))))),(0,t.kt)("h1",{id:"los-tes-modelos-son-equivalentes-vale-decir-que-todos-describen-en-concepto-de-computabilidad-desde-distintas-torres-axiom\xe1tica"},"Los tes modelos son equivalentes, vale decir que todos describen en concepto de computabilidad desde distintas torres axiom\xe1tica."),(0,t.kt)("h3",{id:"la-d\xe9cada-de-los-40"},"La d\xe9cada de los 40"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Hacia los a\xf1os 40 con el advenimiento de la primera computadora con programa almacenado, de la mano de John Von Neumann, hizo necesario escribir secuencias de c\xf3digo o programas en ",(0,t.kt)("strong",{parentName:"li"},"lenguaje de m\xe1quina"),".")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"    C7 06 0000 0002\n")),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"As\xed para mover un valor literal 2 a una direcci\xf3n de memoria se deb\xeda escribir la secuencia anterior de comandos, esto hacia imposible que se pudieran escribir programas r\xe1pidamente y de forma poco tediosa. Por ello nace el llamado ",(0,t.kt)("strong",{parentName:"li"},"lenguaje ensamblador")," , en el cual los c\xf3digos de instrucci\xf3n se reemplazaron por 3 letras que representa una instrucci\xf3n mnemot\xe9cnica y por direcciones de memoria que pod\xedan se dadas en forma simb\xf3lica.")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"    MOV X,2\n")),(0,t.kt)("ol",{start:3},(0,t.kt)("li",{parentName:"ol"},"Lo que se buscaba era poder mejorar aun todas esas mejoras que el lenguaje ensamblador hab\xeda introducido, de manera de simplificar aun m\xe1s la escritura de programas")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"    X=2\n")),(0,t.kt)("ol",{start:4},(0,t.kt)("li",{parentName:"ol"},"Entre 1954 y 1954 John Backus desarrollo el primer lenguaje de programaci\xf3n de alto nivel, FORTRAN I y su compilador.")),(0,t.kt)("h2",{id:"el-aporte-de-noam-chomsky"},"El Aporte de Noam Chomsky"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Al mismo tiempo Noam Chomsky, ling\xfcista estadounidense que aun vive, Comenz\xf3 a estudiar la estructura del ",(0,t.kt)("strong",{parentName:"p"},"lenguaje natural"),". Sus descubrimientos hicieron que la construcci\xf3n de compiladores se volviera mucho m\xe1s f\xe1cil e incluso pudiera ser automatizada en cierto grado.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Sus estudios desembocaron en una clasificaci\xf3n de los lenguajes de acuerdo con la complejidad de sus ",(0,t.kt)("strong",{parentName:"p"},"gram\xe1ticas")," y la potencia de los algoritmos necesarios para reconocerlas."),(0,t.kt)("p",{parentName:"li"},(0,t.kt)("img",{alt:"img",src:n(9716).Z})))),(0,t.kt)("h2",{id:"la-jerarqu\xeda-de-chomsky"},"La Jerarqu\xeda de Chomsky"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Se compone de 4 niveles gramaticales:"),(0,t.kt)("ol",{parentName:"li"},(0,t.kt)("li",{parentName:"ol"},"Gram\xe1ticas de Tipo 3: ")),(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"Gram\xe1ticas Regulares"),": Estos lenguajes son aquellos que pueden ser aceptados por un aut\xf3mata finito. Tambi\xe9n esta familia de lenguajes pueden ser obtenidas por medio de expresiones regulares. ")),(0,t.kt)("ol",{parentName:"li"},(0,t.kt)("li",{parentName:"ol"},"Gram\xe1ticas de Tipo 2: ")),(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"Gram\xe1ticas Libres del Contexto"),": Estos lenguajes son aquellos que pueden ser reconocidos por un aut\xf3mata con pila.")),(0,t.kt)("ol",{parentName:"li"},(0,t.kt)("li",{parentName:"ol"},"Gram\xe1ticas de Tipo 1: ")),(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"gram\xe1ticas sensibles al contexto"),": Los lenguajes descritos por estas gram\xe1ticas son exactamente todos aquellos lenguajes reconocidos por una m\xe1quina de Turing determinista cuya cinta de memoria est\xe1 acotada por un cierto n\xfamero entero de veces sobre la longitud de entrada, tambi\xe9n conocidas como ",(0,t.kt)("strong",{parentName:"li"},"aut\xf3matas linealmente acotados"),".")),(0,t.kt)("ol",{parentName:"li"},(0,t.kt)("li",{parentName:"ol"},"Gram\xe1ticas de Tipo 0:")),(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},"que incluye a todas las gram\xe1ticas formales. Estas gram\xe1ticas generan todos los lenguajes capaces de ser reconocidos por una m\xe1quina de Turing. ")))),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"-   Las gram\xe1ticas de Tipo 2 o **Gram\xe1ticas libres de Contexto** resultaron ser las m\xe1s \xfatiles para los lenguajes de programaci\xf3n.\n")))}m.isMDXComponent=!0},731:function(e,a,n){a.Z=n.p+"assets/images/Kurt_Godel-76ee9dbca753ec77a5a5caab1affc6b3.jpg"},7129:function(e,a,n){a.Z=n.p+"assets/images/church_alonzo-66304fb4b850b1d9e82aacdf0661c185.jpg"},9716:function(e,a,n){a.Z=n.p+"assets/images/noam-chomsky-c4f819d5bc30643e1fd06a585871217c.png"},6359:function(e,a,n){a.Z=n.p+"assets/images/sdl-example-5017736f8576a8ca393157d304ff2dff.png"},8596:function(e,a,n){a.Z=n.p+"assets/images/turing-615bf414563fb04d4e54696fda9ac0c4.jpg"}}]);