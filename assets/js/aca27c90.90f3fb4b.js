"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[176],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=m(n),u=r,k=d["".concat(p,".").concat(u)]||d[u]||s[u]||i;return n?a.createElement(k,l(l({ref:t},c),{},{components:n})):a.createElement(k,l({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var m=2;m<i;m++)l[m]=n[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9181:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return c},default:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={marp:!0,theme:"base-theme"},p="Pr\xe1ctica 8 (26/10)",m={unversionedId:"practicas/8",id:"version-2022_2/practicas/8",isDocsHomePage:!1,title:"Pr\xe1ctica 8 (26/10)",description:"Orden del d\xeda:",source:"@site/versioned_docs/version-2022_2/practicas/8.md",sourceDirName:"practicas",slug:"/practicas/8",permalink:"/teo/docs/2022_2/practicas/8",editUrl:"https://github.com/compiladores/compiladores.github.io/edit/master/docs/versioned_docs/version-2022_2/practicas/8.md",tags:[],version:"2022_2",frontMatter:{marp:!0,theme:"base-theme"},sidebar:"version-2022_2/practicaSidebar",previous:{title:"Pr\xe1ctica 7 (19/10)",permalink:"/teo/docs/2022_2/practicas/7"}},c=[{value:"Explicaci\xf3n Lab 6 + criterios de correcci\xf3n",id:"explicaci\xf3n-lab-6--criterios-de-correcci\xf3n",children:[]},{value:"Repaso de JsonLang",id:"repaso-de-jsonlang",children:[]},{value:"Presentaci\xf3n de JsonAsm",id:"presentaci\xf3n-de-jsonasm",children:[]},{value:"Comparaci\xf3n CompIR0 vs CompIR5",id:"comparaci\xf3n-compir0-vs-compir5",children:[]},{value:"Arquitectura propuesta",id:"arquitectura-propuesta",children:[]},{value:"CompIR0 a CompIR1: Traducir estructuras de control",id:"compir0-a-compir1-traducir-estructuras-de-control",children:[]},{value:"CompIR1 a CompIR2: Eliminar variables",id:"compir1-a-compir2-eliminar-variables",children:[]},{value:"CompIR2 a CompIR3: Eliminar expresiones",id:"compir2-a-compir3-eliminar-expresiones",children:[]},{value:"CompIR3 a CompIR4: Eliminar funciones",id:"compir3-a-compir4-eliminar-funciones",children:[]},{value:"CompIR4 a CompIR5: Eliminar labels",id:"compir4-a-compir5-eliminar-labels",children:[]},{value:"Orden recomendado de trabajo",id:"orden-recomendado-de-trabajo",children:[]}],s={toc:c};function d(e){var t=e.components,o=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"pr\xe1ctica-8-2610"},"Pr\xe1ctica 8 (26/10)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Orden del d\xeda:")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Explicaci\xf3n lab 6 + criterios de correcci\xf3n"),(0,i.kt)("li",{parentName:"ol"},"Repaso de JsonLang/CompIR0"),(0,i.kt)("li",{parentName:"ol"},"Presentaci\xf3n de JsonAsm/CompIR5"),(0,i.kt)("li",{parentName:"ol"},"Comparaci\xf3n CompIR0 vs CompIR5"),(0,i.kt)("li",{parentName:"ol"},"Arquitectura propuesta"),(0,i.kt)("li",{parentName:"ol"},"CompIR0 a CompIR1: Traducir estructuras de control"),(0,i.kt)("li",{parentName:"ol"},"CompIR1 a CompIR2: Eliminar variables y scopes"),(0,i.kt)("li",{parentName:"ol"},"CompIR2 a CompIR3: Eliminar expresiones"),(0,i.kt)("li",{parentName:"ol"},"CompIR3 a CompIR4: Eliminar funciones"),(0,i.kt)("li",{parentName:"ol"},"CompIR4 a CompIR5: Eliminar labels")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Bibliograf\xeda:")," esta vez no hay"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"explicaci\xf3n-lab-6--criterios-de-correcci\xf3n"},"Explicaci\xf3n Lab 6 + criterios de correcci\xf3n"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Aceptar el assignment (link ahora o en el mail luego)"),(0,i.kt)("li",{parentName:"ol"},"Clonar el assignment si quieren"),(0,i.kt)("li",{parentName:"ol"},"Puntaje (hasta 11! punto extra):",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Entrega (Pasan los test): ",(0,i.kt)("strong",{parentName:"li"},"6 puntos")),(0,i.kt)("li",{parentName:"ul"},'5 \xf3 m\xe1s tests que contienen la palabra "extra" en la descripci\xf3n: ',(0,i.kt)("strong",{parentName:"li"},"+2 puntos")),(0,i.kt)("li",{parentName:"ul"},"El \xfaltimo commit del PR tiene fecha previa al 8/11 23:59: ",(0,i.kt)("strong",{parentName:"li"},"+1 puntos")),(0,i.kt)("li",{parentName:"ul"},"El \xfaltimo commit del PR tiene fecha previa al 15/11 23:59: ",(0,i.kt)("strong",{parentName:"li"},"+2 puntos"))))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"repaso-de-jsonlang"},"Repaso de JsonLang"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'export type TopStatement<Expr> = \n/* estructuras de control */\n| {\n  if: { cond: Expr; then: Statement<Expr> }[];\n  else?: Statement<Expr>;\n}\n| { while: Expr; do: Statement<Expr> }\n| Statement<Expr>[]\n| { iterator: string; from: Expr; to: Expr; step?: Expr; do: Statement<Expr> }\n| { do: Statement<Expr>; until: Expr }\n| "break"\n| "continue"\n\n/* variables con scopes */\n| { declare: string; value: Expr }\n| { set: string; value: Expr }\n\n/* funciones/procedimientos */\n| { call: string; args: Expr[] }\n| { return: Expr }\n| {\n  function: string;\n  args: string[];\n  block: Stmt;\n}\n')),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"presentaci\xf3n-de-jsonasm"},"Presentaci\xf3n de JsonAsm"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'export type Statement =\n/* manejo de stack */\n  | { push: Memdir | { literal: number }|"pc" }\n  | { pop: Memdir | "pc" }\n/* branches, jumps */\n  | { bz: Offset }\n  | { bnz: Offset }\n  | { jmp: Offset }\n/* aritm\xe9tica */\n  | Binops\n  | Unops;\n\ntype Offset = number;\ntype Memdir = number;\ntype Binops = "+" | "-" | "*" | "/" | "<=" | ">" | "==" | "and" | "or" /* etc */;\ntype Unops = "neg" | "!" | "~";\n')),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"comparaci\xf3n-compir0-vs-compir5"},"Comparaci\xf3n CompIR0 vs CompIR5"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"categor\xeda"),(0,i.kt)("th",{parentName:"tr",align:null},"CompIR0/JsonLang"),(0,i.kt)("th",{parentName:"tr",align:null},"CompIR5/JsonAsm"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"control de flujo"),(0,i.kt)("td",{parentName:"tr",align:null},"if, while, iterator"),(0,i.kt)("td",{parentName:"tr",align:null},"jmp, bnz, bz")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"modelo de memoria"),(0,i.kt)("td",{parentName:"tr",align:null},"variables"),(0,i.kt)("td",{parentName:"tr",align:null},"memoria indexada")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"operaciones aritm\xe9ticas"),(0,i.kt)("td",{parentName:"tr",align:null},"expresiones"),(0,i.kt)("td",{parentName:"tr",align:null},"operaciones sobre el stack")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"soporte de subprogramas"),(0,i.kt)("td",{parentName:"tr",align:null},"funciones"),(0,i.kt)("td",{parentName:"tr",align:null},"stack, operaciones sobre el PC")))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"arquitectura-propuesta"},"Arquitectura propuesta"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"bg right contain",src:n(9558).Z})),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"compir0-a-compir1-traducir-estructuras-de-control"},"CompIR0 a CompIR1: Traducir estructuras de control"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Recorrido recursivo del AST (recursividad estructural)"),(0,i.kt)("li",{parentName:"ul"},"Agregar ",(0,i.kt)("strong",{parentName:"li"},"labels"),", branches condicionales  y ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"push"))," de expresiones para replicar la sem\xe1ntica de las estructuras de control"),(0,i.kt)("li",{parentName:"ul"},"Ver ejemplo while, if en starter"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Llegan:")," ",(0,i.kt)("inlineCode",{parentName:"li"},"lbl")," , ",(0,i.kt)("inlineCode",{parentName:"li"},"push"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"bnz"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"bz"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"jmp"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"functionIntro"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"functionEnd"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"enterBlock"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"exitBlock")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Se van:")," ",(0,i.kt)("inlineCode",{parentName:"li"},"if else"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"while do"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"iterator do"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"do until"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"break"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"continue")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Flashback:")," ",(0,i.kt)("inlineCode",{parentName:"li"},"GeneralExecutor"))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"compir1-a-compir2-eliminar-variables"},"CompIR1 a CompIR2: Eliminar variables"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Mapeo."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Flashback:")," clase ",(0,i.kt)("inlineCode",{parentName:"li"},"Context"),". ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"functionIntro"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"enterBlock"),", etc. Invocan m\xe9todos de ",(0,i.kt)("inlineCode",{parentName:"li"},"Context"),". "),(0,i.kt)("li",{parentName:"ul"},"En vez de un diccionario de valores tiene un diccionario de IDs"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Se van:")," todas las variables, ",(0,i.kt)("inlineCode",{parentName:"li"},"functionIntro"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"functionEnd"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"enterBlock"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"exitBlock"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"declare"))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"compir2-a-compir3-eliminar-expresiones"},"CompIR2 a CompIR3: Eliminar expresiones"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Mapeo")," (",(0,i.kt)("inlineCode",{parentName:"li"},"flatMap"),") de comandos, ",(0,i.kt)("strong",{parentName:"li"},"recursion")," dentro de las expresiones."),(0,i.kt)("li",{parentName:"ul"},"Calculadora postfija. ",(0,i.kt)("inlineCode",{parentName:"li"},"1 + 2")," se traduce a ",(0,i.kt)("inlineCode",{parentName:"li"},'[{push: 1},{push:2},"+"]')),(0,i.kt)("li",{parentName:"ul"},"En el caso de las invocaciones a funciones se debe agregar ",(0,i.kt)("inlineCode",{parentName:"li"},"callBegin")," antes de pushear los argumentos."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Se van:")," ",(0,i.kt)("inlineCode",{parentName:"li"},"push"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"set"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"call")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Llegan:")," ",(0,i.kt)("inlineCode",{parentName:"li"},"callStart"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"callEnd"))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"compir3-a-compir4-eliminar-funciones"},"CompIR3 a CompIR4: Eliminar funciones"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"return")," se convierte en ",(0,i.kt)("inlineCode",{parentName:"li"},'{pop:"pc"}'),". Pero qu\xe9 pongo en ",(0,i.kt)("inlineCode",{parentName:"li"},"pc"),"?"),(0,i.kt)("li",{parentName:"ul"},"El caller debe mandar el PC, sin perder su propio PC de retorno."),(0,i.kt)("li",{parentName:"ul"},"Mi soluci\xf3n (es mejorable) (cada subprograma almacena su PC de retorno en ",(0,i.kt)("inlineCode",{parentName:"li"},"-3"),"). Efecto sobre el stack de cada instrucci\xf3n:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"callBegin"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"[]")," -> ",(0,i.kt)("inlineCode",{parentName:"li"},"[callerRetAddr]"),". (",(0,i.kt)("inlineCode",{parentName:"li"},"callerRetAddr")," est\xe1 en ",(0,i.kt)("inlineCode",{parentName:"li"},"-3")," siempre)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"callEnd"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"[callerRetAddr,arg1,arg2,arg3]")," -> ",(0,i.kt)("inlineCode",{parentName:"li"},"[retval]")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"functionIntro"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"[callerRetAddr,arg1,arg2,arg3,calledRetAddr]")," -> ",(0,i.kt)("inlineCode",{parentName:"li"},"[callerRetAddr]")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"return"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"[callerRetAddr,retVal]")," -> ",(0,i.kt)("inlineCode",{parentName:"li"},"[callerRetAddr,retVal]"),". hace ",(0,i.kt)("inlineCode",{parentName:"li"},'{pop:"pc"}')," de ",(0,i.kt)("strong",{parentName:"li"},"su")," direcci\xf3n de retorno + 2."))),(0,i.kt)("li",{parentName:"ul"},"Pueden hacer casi todo el lab sin esta parte. Es conveniente que piensen de forma gen\xe9rica en qu\xe9 efecto tiene cada instrucci\xf3n.")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"compir4-a-compir5-eliminar-labels"},"CompIR4 a CompIR5: Eliminar labels"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Se van:")," ",(0,i.kt)("inlineCode",{parentName:"li"},"lbl")),(0,i.kt)("li",{parentName:"ul"},"Algoritmo:",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Primera pasada: Crear un mapa de posiciones absolutas de cada label"),(0,i.kt)("li",{parentName:"ol"},"Segunda pasada: Reemplazar los labels por offsets")))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"orden-recomendado-de-trabajo"},"Orden recomendado de trabajo"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Completar CompIR4Translator.ts con la implementaci\xf3n correcta, utilizando el unit test provisto."),(0,i.kt)("li",{parentName:"ol"},'Completar CompIR3Translator.ts con "no-ops". Hay pocos ejemplos con funciones!'),(0,i.kt)("li",{parentName:"ol"},"Construir algunos (pocos!) unit tests para CompIR2Translator.ts"),(0,i.kt)("li",{parentName:"ol"},"Implementar CompIR2Translator.ts a partir de esos unit tests"),(0,i.kt)("li",{parentName:"ol"},"Implementaci\xf3n de CompIR1Translator.ts que ignore funciones y bloques."),(0,i.kt)("li",{parentName:"ol"},"Workflow: Ejecutar los unittests, iterar ajustes de forma que pasen cada vez m\xe1s tests.")))}d.isMDXComponent=!0},9558:function(e,t,n){t.Z=n.p+"assets/images/Arquitectura_compilador.drawio-b580f4d3369621a76981af13b9bfa7d3.png"}}]);